trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  functionAppName: 'cicd-lab4-function'
  nodeVersion: '18.x'

stages:
# 1️⃣ Build Stage
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        if [ -f package-lock.json ]; then rm package-lock.json; fi
        npm install
      displayName: 'npm install'

    - script: |
        npm run build --if-present
      displayName: 'npm build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# 2️⃣ Test Stage (optional - include only if you have tests)
- stage: Test
  displayName: 'Test Stage'
  condition: succeeded()
  jobs:
  - job: Test
    displayName: 'Run Unit Tests'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        npm test
      displayName: 'Run tests with npm'

# 3️⃣ Deploy Stage
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeededOrFailed()
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: 'Azure subscription 1'
        appName: $(functionAppName)
        package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'